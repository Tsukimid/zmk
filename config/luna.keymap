/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define luna 0
#define navi 1

/ {
    combos {
    compatible = "zmk,combos";

    // BKSP, ENTER, CAPS
        combo_bspc {
            timeout-ms = <100>;
            layers = <0 1>;
            key-positions = <6 7>;
            bindings = <&kp BSPC>;
        };

        combo_cbspc {
            timeout-ms = <100>;
            layers = <0 1>;
            key-positions = <6 7 8>;
            bindings = <&kp LC(BSPC)>;
        };

        combo_ctrlw {
            timeout-ms = <100>;
            layers = <0 1>;
            key-positions = <6 7 8 9>;
            bindings = <&kp LC(W)>;
        };

        combo_enter {
            timeout-ms = <100>;
            layers = <0 1>;
            key-positions = <23 24 25>;
            bindings = <&kp ENTER>;
        };

        combo_caps {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <14 15>;
            bindings = <&kp CAPS>;
        };

        combo_capsword {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <4 5>;
            bindings = <&caps_word>;
        };
        
        // SHORTCUTS

        combo_zhis {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <11 27>;
            bindings = <&kp LC(R)>;
        };

        // BRACKETS
        combo_rangle {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <5 15>;
            bindings = <&kp GT>;
        };

        combo_langle {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <4 14>;
            bindings = <&kp LT>;
        };

        combo_rround {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <6 16>;
            bindings = <&kp RPAR>;
        };

        combo_lround {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = ❤ 13>;
            bindings = <&kp LPAR>;
        };

        combo_rcurve {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <7 17>;
            bindings = <&kp RBRC>;
        };

        combo_lcurve {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <2 12>;
            bindings = <&kp LBRC>;
        };

        combo_rsquare {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <8 18>;
            bindings = <&kp RBKT>;
        };

        combo_lsquare {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <11 1>;
            bindings = <&kp LBKT>;
        };

        // ALPHA
        combo_z {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <0 10>;
            bindings = <&kp Z>;
        };
        
        combo_j {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <11 20>;
            bindings = <&kp J>;
        };
        
        combo_v {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <13 22>;
            bindings = <&kp V>;
        };
        
        combo_q {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <16 23>;
            bindings = <&kp Q>;
        };
        
        combo_pd {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <9 19>;
            bindings = <&kp DOT>;
        };

        // LAYERS
        combo_rsfb {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <17 24>;
            bindings = <&sl SFB>;
        };

        combo_lsfb {
            timeout-ms = <100>;
            layers = <0>;
            key-positions = <12 21>;
            bindings = <&sl SFB>;
        };
    };
    
    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            quick-release;
            release-after-ms = <1000>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
                
        luna_layer {
            label = "luna";
            bindings = <
                &kp W &kp C &kp Y &kp M &kp X        &kp K &kp P &kp O     &kp U    &kp SQT 
                &kp R &kp S &kp T &kp N &kp V        &kp B &kp H &kp A     &kp I    &kp E
                      &kp G &kp F &kp L                    &kp D &kp COMMA &kp DOT
                        &sl navi &skq LSHFT                 &kp SPACE &kp SQT  
            >;
        };       
                 
        navi_layer {
            label = "navi";
            bindings = <
                &none &none &none &none &none	    &none &none &none &none &none
                &none &none &none &none &none	    &none &none &none &none &none
                      &none &none &none 	    	  &none &none &none
                        &trans &trans                    &trans &trans  
            >;
        };
    };
};
